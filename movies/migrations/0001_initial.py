# Generated by Django 4.0.4 on 2022-05-23 12:25

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Country',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('country_name', models.CharField(db_index=True, max_length=30, unique=True, verbose_name='Country name')),
            ],
            options={
                'verbose_name': 'Country',
                'verbose_name_plural': 'Countries',
            },
        ),
        migrations.CreateModel(
            name='Genre',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('genre_name', models.CharField(db_index=True, max_length=30, unique=True, verbose_name='Genre')),
            ],
        ),
        migrations.CreateModel(
            name='Movies',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(db_index=True, max_length=100, verbose_name='Title')),
                ('original_lang_title', models.CharField(db_index=True, max_length=100, verbose_name='Original Title')),
                ('mdb_link', models.URLField(unique=True, verbose_name='Link to foreign DB')),
                ('start_year', models.IntegerField(db_index=True, validators=[django.core.validators.MinValueValidator(1894), django.core.validators.MaxValueValidator(2024)], verbose_name='Year')),
                ('end_year', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1894), django.core.validators.MaxValueValidator(2024)], verbose_name='Year of ending')),
                ('description', models.TextField(verbose_name='Shooting description')),
                ('date', models.DateTimeField(verbose_name='Date')),
                ('type_item', models.CharField(choices=[('movie', 'Movie'), ('series', 'Series'), ('clip', 'Clip')], max_length=100, verbose_name='Type off item')),
                ('poster', models.ImageField(upload_to='', verbose_name='Poster')),
                ('country', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='movies.country')),
                ('genre', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='movies.genre')),
            ],
            options={
                'verbose_name': 'Movie',
                'verbose_name_plural': 'Movies',
            },
        ),
        migrations.CreateModel(
            name='Locations',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title_location', models.CharField(db_index=True, max_length=100, verbose_name='Locations Title')),
                ('scene_description', models.TextField(db_index=True, verbose_name='Scene')),
                ('movie_spot', models.TextField(verbose_name='Spot')),
                ('address', models.CharField(db_index=True, max_length=100, verbose_name='Location address')),
                ('map_link', models.URLField(verbose_name='Map Link')),
                ('gps_coordinate', models.CharField(max_length=100, verbose_name='GPS')),
                ('timing', models.CharField(max_length=100, verbose_name='Time in movie')),
                ('real_img', models.ImageField(upload_to='main/img/img_loc')),
                ('movie_img', models.ImageField(upload_to='main/img/img_loc')),
                ('movie', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='movies.movies')),
            ],
            options={
                'verbose_name': 'Location',
                'verbose_name_plural': 'Locations',
            },
        ),
    ]
